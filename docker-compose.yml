version: "3.8"

x-common-service: &common-service
  build:
    context: .
    dockerfile: dockerfiles/Dockerfile
  env_file:
    - .env
    - ${LOCAL_ENV_FILE:-.env.local}
  volumes:
    - ./src:/app/src
    - ./data:/app/data
    - ./models:/app/models
    - ./metrics:/app/metrics
    - ./reports:/app/reports
    - ./mlruns:/app/mlruns
    - ./evidently:/app/evidently
    - "/var/run/docker.sock:/var/run/docker.sock"
  working_dir: /app
  restart: "no"
  networks:
  - mlops-net

x-git-service: &git-service
  volumes:
    - ./.git:/app/.git
    - ./.dvc:/app/.dvc

services:
#### === INITIALISE DATAS === ###
  import_raw_data:
    <<: *common-service
    image: maquirog/mlops_movie_recommandation:latest
    container_name: mlops-import_raw_data
    platform: linux/amd64
    command: ["python", "src/data/import_raw_data.py"]

#### === PERMANENT SERVICES === ###
  api:
    <<: *common-service
    image: maquirog/mlops_movie_recommandation:latest
    container_name: mlops-api
    ports:
      - "8000:8000"
    command: ["uvicorn", "src.api.main:app", "--host", "0.0.0.0", "--port", "8000"]
    depends_on:
      - mlflow-server

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: mlflow
      MYSQL_USER: mlflow_user
      MYSQL_PASSWORD: mlflow_password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    restart: unless-stopped
    networks:
    - mlops-net

  mlflow-server:
    <<: *common-service
    image: maquirog/mlops_movie_recommandation:latest
    container_name: mlops-mlflow_server
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5050
      --backend-store-uri mysql+pymysql://mlflow_user:mlflow_password@mysql:3306/mlflow
      --default-artifact-root /app/mlruns
      --serve-artifacts
    ports:
      - "5050:5050"
    depends_on:
      - mysql
    restart: unless-stopped

  evidently:
    <<: *common-service
    image: maquirog/mlops_movie_recommandation:latest
    container_name: mlops-evidently
    command: ["bash", "-c", "python evidently/run_weekly_drift.py ${CURRENT_WEEK} && python evidently/run_evidently_report.py"]

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    depends_on:
      - api
    networks:
    - mlops-net
    
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
    - mlops-net

### === API CALLS (TO BUILD IMAGE ONLY) === ###
  prepare_weekly_dataset:
    <<: *common-service
    image: maquirog/mlops_movie_recommandation:latest
    container_name: mlops-prepare_weekly_dataset
    platform: linux/amd64
    command: ["python", "src/data/prepare_weekly_dataset.py", "${CURRENT_WEEK}"]

  build_features:
    <<: *common-service
    image: maquirog/mlops_movie_recommandation:latest
    container_name: mlops-build_features
    command: ["python", "src/data/build_features.py"]

  trainer_experiment:
    <<: *common-service
    image: maquirog/mlops_movie_recommandation:latest
    container_name: mlops-trainer-experiment
    command: ["bash", "src/models/entrypoint_experiments.sh"]
    depends_on:
      - mlflow-server

  champion_selector:
    <<: [*common-service, *git-service]
    image: maquirog/mlops_movie_recommandation:latest
    container_name: mlops-champion_selector
    command: python src/models/compare_and_promote.py
    depends_on:
      - mlflow-server


### === VOLUMES & NETWORKS === ###
volumes:
  mysql-data:

networks:
  mlops-net:
    external: true