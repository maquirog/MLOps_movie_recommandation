name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build, Test, and Push Services
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker images for all services
      - name: Build service images
        run: |
          docker-compose build

      # Run and validate import_raw_data service
      - name: Validate import_raw_data service
        run: |
          docker-compose up -d import_raw_data
          CONTAINER_NAME=$(docker ps --filter "name=import_raw_data" --format "{{.Names}}")
          echo "Waiting for $CONTAINER_NAME to complete..."
          docker wait $CONTAINER_NAME
          docker logs $CONTAINER_NAME

      # Run and validate build_features service
      - name: Validate build_features service
        run: |
          docker-compose up -d build_features
          CONTAINER_NAME=$(docker ps --filter "name=build_features" --format "{{.Names}}")
          echo "Waiting for $CONTAINER_NAME to complete..."
          docker wait $CONTAINER_NAME
          docker logs $CONTAINER_NAME

      # Run and validate train service
      - name: Validate train service
        run: |
          docker-compose up -d train
          CONTAINER_NAME=$(docker ps --filter "name=train" --format "{{.Names}}")
          echo "Waiting for $CONTAINER_NAME to complete..."
          docker wait $CONTAINER_NAME
          docker logs $CONTAINER_NAME

      # Run and validate predict service
      - name: Validate predict service
        run: |
          docker-compose up -d predict
          CONTAINER_NAME=$(docker ps --filter "name=predict" --format "{{.Names}}")
          echo "Waiting for $CONTAINER_NAME to complete..."
          docker wait $CONTAINER_NAME
          docker logs $CONTAINER_NAME

      # Run and validate evaluate service
      - name: Validate evaluate service
        run: |
          docker-compose up -d evaluate
          CONTAINER_NAME=$(docker ps --filter "name=evaluate" --format "{{.Names}}")
          echo "Waiting for $CONTAINER_NAME to complete..."
          docker wait $CONTAINER_NAME
          docker logs $CONTAINER_NAME

      # Run and validate API service
      - name: Validate API service
        run: |
          docker-compose up -d api
          CONTAINER_NAME=$(docker ps --filter "name=api" --format "{{.Names}}")
          echo "Waiting for $CONTAINER_NAME to start..."
          sleep 10
          docker logs $CONTAINER_NAME

      # Install dependencies for API testing
      - name: Install testing dependencies
        run: |
          pip install pytest requests

      # Run API tests
      - name: Run API tests with pytest
        run: |
          pytest tests/api_tests.py

      # Push Docker images to the registry
      - name: Push service images
        run: |
          docker-compose push