name: CI/CD Pipeline

on:
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - master

jobs:
  python_build:
    name: Python Application
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest requests-mock
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Uncomment if you want to run regular Python tests
      # - name: Test with pytest
      #   run: |
      #     pytest -o log_cli=1 -o log_cli_level=INFO

  cicd_pipeline:
    name: CI/CD Pipeline
    env:
      VOLUME_MODE: "shared"
      LOCAL_ENV_FILE: /dev/null
    runs-on: ubuntu-latest
    needs: python_build
    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build service images
        run: |
          docker-compose build

      # === Validate Service Startup and Execution Order ===

      - name: Validate import_raw_data service
        run: |
          docker-compose up -d import_raw_data
          CONTAINER_NAME=mlops-import_raw_data
          echo "Waiting for $CONTAINER_NAME to complete..."
          docker wait $CONTAINER_NAME
          docker logs $CONTAINER_NAME

      - name: Validate prepare_weekly_dataset service
        run: |
          export CURRENT_WEEK=1
          docker-compose up -d prepare_weekly_dataset
          CONTAINER_NAME=mlops-prepare_weekly_dataset
          echo "Waiting for $CONTAINER_NAME to complete..."
          docker wait $CONTAINER_NAME
          docker logs $CONTAINER_NAME

      - name: Validate build_features service
        run: |
          docker-compose up -d build_features
          CONTAINER_NAME=mlops-build_features
          echo "Waiting for $CONTAINER_NAME to complete..."
          docker wait $CONTAINER_NAME
          docker logs $CONTAINER_NAME

      - name: Validate trainer_experiment service
        run: |
          export CURRENT_WEEK=1
          docker-compose up -d trainer_experiment
          CONTAINER_NAME=mlops-trainer-experiment
          echo "Waiting for $CONTAINER_NAME to complete..."
          docker wait $CONTAINER_NAME
          docker logs $CONTAINER_NAME

      - name: Validate champion_selector service
        run: |
          docker-compose up -d champion_selector
          CONTAINER_NAME=mlops-champion_selector
          echo "Waiting for $CONTAINER_NAME to complete..."
          docker wait $CONTAINER_NAME
          docker logs $CONTAINER_NAME

      - name: Validate evaluate service
        run: |
          docker-compose up -d evaluate
          CONTAINER_NAME=mlops-evaluate
          echo "Waiting for $CONTAINER_NAME to complete..."
          docker wait $CONTAINER_NAME
          docker logs $CONTAINER_NAME

      - name: Validate evidently service
        run: |
          export CURRENT_WEEK=1
          docker-compose up -d evidently
          CONTAINER_NAME=mlops-evidently
          echo "Waiting for $CONTAINER_NAME to complete..."
          docker wait $CONTAINER_NAME
          docker logs $CONTAINER_NAME

      - name: Validate API service
        run: |
          docker-compose up -d api
          CONTAINER_NAME=mlops-api
          echo "Waiting for $CONTAINER_NAME to start..."
          sleep 10
          docker logs $CONTAINER_NAME

      # Optionally test mlflow-server, prometheus, grafana, mysql

      - name: Install testing dependencies
        run: |
          pip install pytest requests

      - name: Run API tests with pytest
        run: |
          pytest tests/api_tests.py

      - name: Push service images
        run: |
          docker-compose push